@page "/"
@using CBPresents.Shared.Models;
@using Microsoft.AspNetCore.Authorization

@inject IJSRuntime jsRuntime
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
@inject IToastService toastService

<PageTitle>Index</PageTitle>

<div>
    <AuthorizeView>
        <Authorized>
            @switch (Page)
            {
                case "Timer":
                    <h1 class="absolute inset-6 lg:inset-12 text-white text-4xl lg:text-6xl font-montserrat">Giving presents<br />away in:</h1>
                    <div class="h-screen w-screen flex justify-center items-center">
                        <div id="countdown">
                            <ul>
                                <li class="inline-block list-none text-base lg:text-2xl text-white m-1 lg:m-3 text-center"><span class="block text-6xl lg:text-8xl text-center bg-[#0B291B] w-20 lg:w-36 h-20 lg:h-32 flex justify-center items-center rounded-2xl"><div class="font-poppins" id="days"></div></span><p class="font-poppins mt-5 lg:mt-10 text-[#B5E3CD]">Days</p></li>
                                <li class="inline-block list-none text-base lg:text-2xl text-white m-1 lg:m-3 text-center"><span class="block text-6xl lg:text-8xl text-center bg-[#0B291B] w-20 lg:w-36 h-20 lg:h-32 flex justify-center items-center rounded-2xl"><div class="font-poppins" id="hours"></div></span><p class="font-poppins mt-5 lg:mt-10 text-[#B5E3CD]">Hours</p></li>
                                <li class="inline-block list-none text-base lg:text-2xl text-white m-1 lg:m-3 text-center"><span class="block text-6xl lg:text-8xl text-center bg-[#0B291B] w-20 lg:w-36 h-20 lg:h-32 flex justify-center items-center rounded-2xl"><div class="font-poppins" id="minutes"></div></span><p class="font-poppins mt-5 lg:mt-10 text-[#B5E3CD]">Minutes</p></li>
                                <li class="inline-block list-none text-base lg:text-2xl text-white m-1 lg:m-3 text-center"><span class="block text-6xl lg:text-8xl text-center bg-[#0B291B] w-20 lg:w-36 h-20 lg:h-32 flex justify-center items-center rounded-2xl"><div class="font-poppins" id="seconds"></div></span><p class="font-poppins mt-5 lg:mt-10 text-[#B5E3CD]">Seconds</p></li>
                            </ul>
                        </div>
                    </div>
                    break;
                case "Winner":
                    <div class="h-screen w-screen flex justify-center items-center flex-col gap-3 lg:gap-4">
                        <img class="scale-100 lg:scale-125" src="/images/Letter.png" alt="Image of letter" />
                        <h1 class="font-lexend font-bold text-white text-4xl lg:text-5xl">Congratulations!</h1>
                        <p class="font-poppins text-[#B5E3CD] text-xl lg:text-2xl max-w-sm lg:max-w-md text-center">Congratulations, <span class="font-bold">@context.User.Identity?.Name</span>, you have won a prize!<br />You must collect it from the canteen!</p>
                    </div>
                    break;
                case "Loser":
                    <div class="h-screen w-screen flex justify-center items-center flex-col gap-3 lg:gap-4">
                        <img class="scale-100 lg:scale-125" src="/images/Cooking.png" alt="Image of christmas sweet" />
                        <h1 class="font-lexend font-bold text-white text-4xl lg:text-5xl">Mission failed</h1>
                        <p class="font-poppins text-[#B5E3CD] text-xl lg:text-2xl max-w-sm lg:max-w-md text-center">We’ll get em next time...</p>
                    </div>
                    break;
                case "Loading":
                    <div class="h-screen w-screen flex justify-center items-center flex-col gap-3 lg:gap-4">
                        <h1 class="font-lexend font-bold text-white text-4xl lg:text-5xl">Loading...</h1>
                    </div>
                    break;
                default:
                    break;
            }

           
            <!--
            <div class="h-screen w-screen flex justify-center items-center flex-col gap-3 lg:gap-4">
                <img class="scale-100 lg:scale-125" src="/images/Letter.png" alt="Image of letter"/>
                <h1 class="font-lexend font-bold text-white text-4xl lg:text-5xl">Congratulations!</h1>
                <p class="font-poppins text-[#B5E3CD] text-xl lg:text-2xl max-w-sm lg:max-w-md text-center">Congratulations, <span class="font-bold">@context.User.Identity?.Name</span>, you have won a prize!<br />You must collect it from the canteen!</p>
            </div>
            -->
            
            <!--
            <div class="h-screen w-screen flex justify-center items-center flex-col gap-3 lg:gap-4">
                <img class="scale-100 lg:scale-125" src="/images/Cooking.png" alt="Image of christmas sweet" />
                <h1 class="font-lexend font-bold text-white text-4xl lg:text-5xl">Mission failed</h1>
                <p class="font-poppins text-[#B5E3CD] text-xl lg:text-2xl max-w-sm lg:max-w-md text-center">We’ll get em next time...</p>
            </div>
            -->
            <!--
            
            @foreach (var claim in context.User.Claims)
            {
                <div>
                @claim.Type - @claim.Value
                </div>
                <br />
            }
            -->
        </Authorized>
        <NotAuthorized>
            <div class="h-screen w-screen flex justify-center items-center">
                <div>
                    <h1 class="text-white font-montserrat text-6xl lg:text-8xl text-center max-w-xl">
                        VSCPI’s Christmas lottery
                    </h1>
                    <div class="flex justify-center items-center">
                        <div @onclick="Login" class="bg-black bubbly-button justify-self-center mt-36 rounded-[29px] shadow-button bg-button transition ease-in-out delay-150 hover:-translate-1 hover:scale-110 duration-250 cursor-pointer">
                            <p class="text-white font-montserrat text-4xl p-3 pr-5 pl-5 lg:p-10 lg:pl-20 lg:pr-20 text-center">Enter the lottery</p>
                        </div>
                    </div>
                </div>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>


<!--<SurveyPrompt Title="How is Blazor working for you?" />-->
@code {
    [CascadingParameter]
    public MainLayout? Layout { get; set; }
    private string Page = "Loading";

    protected override async void OnInitialized()
    { 
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity!.IsAuthenticated)
        {
            var response = await Http.PostAsync("api/lottery/participate", null);
            var context = await response.Content.ReadFromJsonAsync<LotteryEntryVM>();
            
            
            if (context!.LotteryTime < DateTime.Now)
            {
                if (context.IsWinner ?? false)
                {
                    Layout!.SetPage("Winner");
                    Page = "Winner";
                    StateHasChanged();
                    return;
                }

                Layout!.SetPage("Loser");
                Page = "Loser";
                StateHasChanged();
                return;
            }

            if (context!.AlreadyParticipated ?? false)
            {
                toastService.ShowWarning("You have already participated in the lottery!", "Already participated");
            }

            if (!context!.CanParticipate ?? false)
            {
                toastService.ShowError("You are not allowed to participate in the lottery!", "Not allowed");
            }

            Layout!.SetPage("Timer");
            Page = "Timer";
            await jsRuntime.InvokeVoidAsync("setTimer", context!.LotteryTime);
            StateHasChanged();
        }
        else 
        {
            Layout!.SetPage("Home");
        }

        Console.WriteLine("OnInitializedIndex");
    }
    
    private async void Login()
    {
        await jsRuntime.InvokeVoidAsync("animateButton");
        await Task.Delay(500);
        Navigation.NavigateTo("authentication/login");
    }
}